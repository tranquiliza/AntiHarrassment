@inject IUserService userService
@inject NavigationManager navigationManager

@page "/register"

<h3>Register</h3>

<div class="row">
    <div class="col-6 offset-3">
        <EditForm Model="@model" OnValidSubmit="@RegisterUser">
            <div class="form-group">
                <label for="email">Email</label>
                <InputText type="text" id="email" @bind-Value="model.Email"></InputText>
            </div>
            <div class="form-group">
                <label for="register_password">Password</label>
                <InputText type="password" id="register_password" @bind-Value="model.Password"></InputText>
            </div>
            <div class="form-group">
                <label for="register_password_confirm">Confirm Password</label>
                <InputText type="password" id="register_password_confirm" @bind-Value="ConfirmPassword"></InputText>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {
    RegisterUserModel model = new RegisterUserModel();

    public string ConfirmPassword { get; set; }

    public async Task RegisterUser()
    {
        if (!string.Equals(model.Password, ConfirmPassword))
        {
            return;
        }

        await userService.CreateAccount(model);

        navigationManager.NavigateTo("Login");
    }
}
